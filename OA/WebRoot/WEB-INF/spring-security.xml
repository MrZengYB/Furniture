<?xml version="1.0" encoding="UTF-8"?>  
<b:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:b="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">  
	
	<!--登录页面不过滤 -->
    <http pattern="/loginPage/**" security="none"/>
    <!--静态资源不过滤 -->
    <http pattern="/views/**" security="none"/>
    <http pattern="/resource/**" security="none"/>
    <!--前台页面不过滤 -->
    <http pattern="/front/**" security="none"/>
    
	<http auto-config="true" access-denied-page="/loginPage/denied.jsp">
		<form-login login-page="/loginPage/login.jsp" authentication-failure-url="/loginPage/login.jsp?error=1" />
		<intercept-url  pattern="/**" access="ROLE_USER_LOGIN" />
		<logout logout-url="/logout" logout-success-url="/loginPage/login.jsp" invalidate-session="true"/>
		<!-- session-management是用来防止多个用户同时登陆一个账号的。 -->
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />  
        </session-management>  
    </http>
	
    <!--验证配置，认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->  
    <authentication-manager >  
        <authentication-provider user-service-ref="myUserDetailService">  
            <!--如果用户的密码采用加密的话-->
           	<password-encoder hash="md5"> 
        		<salt-source user-property="username"/>
        	</password-encoder>
        </authentication-provider>  
    </authentication-manager>  
    
    <!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
    <b:bean id="userSecurityService" class="com.tlb.security.UserSecurityServiceImpl" />
    <b:bean id="myUserDetailService" class="com.tlb.security.MyUserDetailService" />  
    
</b:beans>
